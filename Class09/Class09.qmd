---
title: "Halloween Project Class09"
author: "Thomas Bailey"
format: pdf
toc: TRUE
---

Today we will examine data from 538 on common Halloween candy. In particular we will use ggplot, dplyr, and PCA to make sense of this multivariate dataset. 


## Importing candy data

```{r}
candy <- read.csv("candy-data.txt", row.names=1)
head(candy)
```

> Q1. How many different candy types are in this dataset?

```{r}
nrow(candy)

```
> Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy$fruity)

```

>How many chocolate candy are there in the dataset

```{r}
sum(candy$chocolate)
```
>Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

```{r}
candy["Twix", "winpercent"]
```

```{r}
candy["3 Musketeers",]$winpercent
```

>Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat",]$winpercent
```

>Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?


```{r}
candy["Tootsie Roll Snack Bars","winpercent"]
```
To get a quick overview of a new dataset use function `skimr`

```{r}
library("skimr")
skim(candy)
```

> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

**N.B** It looks like the `winpercent` xolumn is on a different scale than the others(0-100% rather than 0-1). I will need to scale this dataset before analysis like PCA

> Q7. What do you think a zero and one represent for the candy$chocolate column?

They represent true or false if the candy bar is chocolate bar or not

>Q8. Plot a histogram of winpercent values

```{r}
hist(candy$winpercent)
```

```{r}
library(ggplot2)
ggplot(candy) + aes(winpercent) + geom_histogram(bins = 10, fill = "lightblue")
```



>Q9. Is the distribution of winpercent values symmetrical?

no

>Q10. Is the center of the distribution above or below 50%?

```{r}
summary(candy$winpercent)
```



>Q11. On average is chocolate candy higher or lower ranked than fruit candy?

-step 1: find all "chocolate" candy
-step 2: find their "winpercent" values 
-step 3: summarize these values
-step 4: find all "fruity" candy
-step 5: find their winpercent values
-step 6: summarize these values

-step 7: compare the two summary values


1. Find all chocolate candy

```{r}
choc.inds <- candy$chocolate == 1
```

2. Find their winpercent values

```{r}
choc.win <- candy[choc.inds,]$winpercent 
```

3. Summarize these values

```{r}
choc.mean <- mean(choc.win)
choc.mean
```

```{r}
fruity.inds <- candy$fruity == 1
```

```{r}
fruity.win <- candy[fruity.inds,]$winpercent
```

```{r}
fruity.mean <- mean(fruity.win)
fruity.mean
```
```{r}
fruity.mean
choc.mean
```
clearly chocolate has a higher `winpercent` than fruity candy


>Q12. Is this difference statistically significant?

```{r}
t.test(choc.win, fruity.win)
```
## Overall best candy

>Q13. What are the five least liked candy types in this set?

```{r}
#not that useful - it just sortss the values
sort(candy$winpercent)
```

```{r}
x <- c(10, 1, 100)
order(x)
```


```{r}
x[order(x)]
```

The `order` function tells us how to arrange the elements of the input to make them sorted - i.e. how to order them


we can determine order of winpercent ot make them sorted and use that order to arrange the whole dataset 

```{r}
ord.inds <- order(candy$winpercent)
head(candy[ord.inds,])
```




>Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
tail(candy[ord.inds,])
```
```{r}
ord.inds <- order(candy$winpercent, decreasing = T)
head(candy[ord.inds,])
```

>Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
ggplot(candy) + aes(winpercent, rownames(candy)) + geom_col()
```

>Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

Let's rearrange

```{r}
ggplot(candy) + aes(winpercent, reorder(rownames(candy),winpercent)) + geom_col()
```

## Time to add some useful color

```{r}
ggplot(candy) + aes(winpercent, reorder(rownames(candy),winpercent), fill = chocolate) + geom_col()
```

We need to make our own separate color vector where we can spell out exactly what candy is colored a particular color. 


```{r}
mycols <- rep("grey", nrow(candy))
mycols[candy$chocolate == 1] <- "chocolate"
mycols[candy$bar == 1] <- "brown"
mycols[candy$fruity == 1] <- "blue"
mycols
```


```{r}
ggplot(candy) + aes(winpercent, reorder(rownames(candy),winpercent)) + geom_col(fill=mycols)
```


```{r}
as.logical(c(1,0,1))
```

>Q17. What is the worst ranked chocolate candy?

Charleston chew

>Q18. What is the best ranked fruity candy?

Nik L Nip


## Taking a look at pricepercent

Make a plot of winpercent (x-axis) vs pricepercent (y-axis) 

```{r}
library("ggrepel")
```


```{r}
ggplot(candy) + aes(winpercent, pricepercent, label = rownames(candy)) + geom_point(col = mycols) + geom_text_repel(max.overlaps = 6) + theme_bw()
```

To avoid the overplotting of the text labels we can use the add on package **ggrepel**




> Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

```{r}
ord <- order(candy$pricepercent, decreasing = F)
head( candy[ord,c(11,12)], n=5 )
```

> Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
```



Nik L nip is one of the most expensive and the worst rated


## 5 Exploring the correlation structure

Now that we have explored the dataset a little, we will se how the variables interact with one another

First we will use correlation and view the results with the **corrplot** package to plot a correlation matrix.

```{r}
cij <- cor(candy) 
cij
```

```{r}
library(corrplot)

```
```{r}
corrplot(cij)
```

> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Chocolate and Fruity are anti-correlated


> Q23. Similarly, what two variables are most positively correlated?

chocolate tends to be bars, have a high pricepercent and high winpercent 

## 6. Principal Component Analysis 

Let’s apply PCA using the `prcom()` function to our candy dataset remembering to set the **scale=TRUE** argument


```{r}
pca <- prcomp(candy, scale = TRUE )
```

```{r}
summary(pca)
```

```{r}
attributes(pca)
```
Let's plot our main results as our PCA "score plot" 

```{r}
pca$x
ggplot(pca$x) + aes(x =PC1, y =PC2, label=rownames(pca$x)) + geom_point(col=mycols) + geom_text_repel(col= mycols)
```

Finally let's look at how the origional variables contribute to the pC's, start with PC1


```{r}
ggplot(pca$rotation) + aes(PC1, reorder(rownames(pca$rotation), PC1)) + geom_col()
```

>Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

These would be fruity, pluribus, and hard. 
